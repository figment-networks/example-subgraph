specVersion: 0.0.2
description: Gravatar example for all networks
repository: https://github.com/graphprotocol/example-subgraph
schema:
  file: ./schema.graphql
dataSources:

# Ethereum Gravity contract with Block, Call and Event handlers
  - kind: ethereum/contract
    name: EthereumBlockCallAndEventHandlers
    network: {{ethereum.network}}
    source:
      address: '{{ethereum.address}}'
      abi: Gravity
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - Gravatar
      abis:
        - name: Gravity
          file: ./abis/Gravity.json
      blockHandlers:
        - handler: handleNewBlock
          filter:
            kind: call
      callHandlers:
        - function: createGravatar(string,string)
          handler: handleCreateGravatar
      eventHandlers:
        - event: NewGravatar(uint256,address,string,string)
          handler: handleNewGravatar
        - event: UpdatedGravatar(uint256,address,string,string)
          handler: handleUpdatedGravatar
      file: ./src/ethereum/block_call_and_event/mapping.ts

# Ethereum Gravity contract using call handlers for Gravatar changes
  - kind: ethereum/contract
    name: EthereumCallHandlers
    network: {{ethereum.network}}
    source:
      address: '{{ethereum.address}}'
      abi: Gravity
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - Gravatar
      abis:
        - name: Gravity
          file: ./abis/Gravity.json
      callHandlers:
        - function: createGravatar(string,string)
          handler: handleCreateGravatar
        - function: updateGravatarName(string)
          handler: handleUpdateGravatarName
        - function: updateGravatarImage(string)
          handler: handleUpdateGravatarImage
      file: ./src/ethereum/call/mapping.ts

# Cosmos Block handlers
  - kind: cosmos
    name: CosmosBlockHandlers
    network: {{cosmos.network}}
    source:
      startBlock: 0
    mapping:
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - Block
      blockHandlers:
        - handler: handleBlock
      file: ./src/cosmos/block/mapping.ts

# Cosmos Event handlers
  - kind: cosmos
    name: CosmosEventHandlers
    network: {{cosmos.network}}
    source:
      startBlock: 0
    mapping:
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - Reward
      eventHandlers:
        - event: rewards
          handler: handleReward
      file: ./src/cosmos/event/mapping.ts

# Cosmos Transaction handlers
  - kind: cosmos
    name: CosmosTransactionHandlers
    network: {{cosmos.network}}
    source:
      startBlock: 0
    mapping:
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - Delegation
        - Coin
      transactionHandlers:
        - handler: handleTx
      file: ./src/cosmos/transaction/mapping.ts

# Near Block
  - kind: near
    name: NearBlock
    network: {{near.network}}
    source:
      startBlock: 0
    mapping:
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - BlockEvent
      blockHandlers:
        - handler: handleBlock
      file: ./src/near/block/mapping.ts

# Near Receipts
  - kind: near
    name: NearReceipt
    network: {{near.network}}
    source:
      account: "app.good-morning.near"
      startBlock: 50736511
    mapping:
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - Greeter
        - Greeting
      receiptHandlers:
        - handler: handleReceipt
      file: ./src/near/receipts/mapping.ts